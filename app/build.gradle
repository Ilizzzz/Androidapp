plugins {
    id 'com.android.application'
}

android {
    namespace 'com.example.yunclass'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.yunclass"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // 禁用构建报告生成
            tasks.whenTaskAdded { task ->
                if (task.name.contains('lint') || 
                    task.name.contains('Report') || 
                    task.name.contains('Test')) {
                    task.enabled = false
                }
            }
        }
        
        debug {
            // 完全禁用debug构建的各种报告和检查
            tasks.whenTaskAdded { task ->
                if (task.name.contains('lint') || 
                    task.name.contains('Report') || 
                    task.name.contains('Test')) {
                    task.enabled = false
                }
            }
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    lint {
        abortOnError false
        checkReleaseBuilds false  // 禁用发布构建的lint检查
        disable 'MissingTranslation', 'ExtraTranslation' // 禁用特定的lint检查
        tasks.whenTaskAdded { task ->
            if (task.name.contains('lint')) {
                task.enabled = false // 禁用所有lint任务
            }
        }
    }
    
    // 禁用测试任务
    testOptions {
        unitTests.all {
            enabled = false
        }
    }
    
    // 禁用自动生成的构建任务
    tasks.whenTaskAdded { task ->
        if (task.name.contains('generateDebugBuildConfig') || 
            task.name.contains('generateReleaseBuildConfig')) {
            task.enabled = false
        }
    }
    
    // 解决JDK兼容性问题
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.5'
    implementation 'androidx.navigation:navigation-ui:2.7.5'
    
    // SwipeRefreshLayout for pull-to-refresh functionality
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    
    // Retrofit for network requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    
    // Glide for image loading
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    
    // ViewPager2 for carousel
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    
    // CardView for card layouts
    implementation 'androidx.cardview:cardview:1.0.0'
    
    // RecyclerView for lists
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    
    // Room for local database
    implementation 'androidx.room:room-runtime:2.6.0'
    annotationProcessor 'androidx.room:room-compiler:2.6.0'
    
    // Shared Preferences for user session
    implementation 'androidx.preference:preference:1.2.1'
    
    // Media3 依赖
    def media3_version = "1.2.0"
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"
    implementation "androidx.media3:media3-common:$media3_version"
    implementation "androidx.media3:media3-exoplayer-dash:$media3_version" // DASH支持
    implementation "androidx.media3:media3-exoplayer-hls:$media3_version"  // HLS支持
    implementation "androidx.media3:media3-session:$media3_version"        // MediaSession支持
    
    // 禁用测试依赖
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}